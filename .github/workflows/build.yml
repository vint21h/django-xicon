# django-xicon
# .github/workflows/build.yml


name: build
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
env:
  default_python: "3.9"
jobs:
  build:
    name: ${{ matrix.python-version }}-${{ matrix.django }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
        django:
          - "2.2.x"
          - "3.0.x"
          - "3.1.x"
    steps:
      - name: Git clone
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('tox.ini', 'setup.py', 'setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install pipenv
          pip install .[test]
      - name: Run tests
        env:
          PLATFORM: ${{ matrix.platform }}
        run: make tox
  checks:
    name: ${{ matrix.python-version }}-${{ matrix.toxenv }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
        toxenv:
          - check
          - check-build
    steps:
      - name: Git clone
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.default_python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.default_python }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('tox.ini', 'setup.py', 'setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.toxenv }}-
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install pipenv
          pip install .[test]
      - name: Run ${{ matrix.toxenv }}
        run: tox -e ${{ matrix.toxenv }}
# TODO: add uploading coverage result to coveralls.
